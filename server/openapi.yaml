openapi: 3.1.0
info:
  title: Kernel Images API
  version: 0.1.0
paths:
  /health:
    get:
      summary: Check API health status
      operationId: getHealth
      responses:
        "200":
          description: API is healthy
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HealthResponse"
        "500":
          $ref: "#/components/responses/InternalError"

  /recording/start:
    post:
      summary: Start a screen recording. Only one recording per ID can be registered at a time.
      operationId: startRecording
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StartRecordingRequest"
      responses:
        "201":
          description: Recording started
        "400":
          $ref: "#/components/responses/BadRequestError"
        "409":
          description: A recording is already in progress
          $ref: "#/components/responses/ConflictError"
        "500":
          $ref: "#/components/responses/InternalError"
  /recording/stop:
    post:
      summary: Stop the recording
      operationId: stopRecording
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StopRecordingRequest"
      responses:
        "200":
          description: Recording stopped
        "400":
          $ref: "#/components/responses/BadRequestError"
        "500":
          $ref: "#/components/responses/InternalError"
  /recording/download:
    get:
      summary: Download the most recently recorded video file
      parameters:
        - name: id
          in: query
          description: Optional recorder identifier. When omitted, the server uses the default recorder.
          schema:
            type: string
            pattern: "^[a-zA-Z0-9-]+$"
      operationId: downloadRecording
      responses:
        "200":
          description: Recording file
          headers:
            X-Recording-Started-At:
              description: Timestamp of when the recording started. Guaranteed to be RFC3339.
              schema:
                type: string
            X-Recording-Finished-At:
              description: Timestamp of when the recording finished. Guaranteed to be RFC3339.
              schema:
                type: string
          content:
            video/mp4:
              schema:
                type: string
                format: binary
        "202":
          description: Recording is still in progress, please try again later
          headers:
            Retry-After:
              description: Suggested wait time in seconds before retrying
              schema:
                type: integer
                minimum: 1
        "400":
          $ref: "#/components/responses/BadRequestError"
        "404":
          $ref: "#/components/responses/NotFoundError"
        "500":
          $ref: "#/components/responses/InternalError"
  /recording/list:
    get:
      summary: List all recorders
      operationId: listRecorders
      responses:
        "200":
          description: List of recorders
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/RecorderInfo"
        "500":
          $ref: "#/components/responses/InternalError"
  /recording/delete:
    post:
      summary: Delete a previously recorded video file
      operationId: deleteRecording
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteRecordingRequest"
      responses:
        "200":
          description: Recording deleted
        "400":
          $ref: "#/components/responses/BadRequestError"
        "404":
          $ref: "#/components/responses/NotFoundError"
        "500":
          $ref: "#/components/responses/InternalError"
          
  # Compatibility alias endpoints
  /computer/click_mouse:
    post:
      summary: Simulate a mouse click action on the host computer (compatibility alias)
      operationId: clickMouse
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ClickMouseRequest"
      responses:
        "200":
          description: Mouse action performed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OkResponse"
        "400":
          $ref: "#/components/responses/BadRequestError"
        "500":
          $ref: "#/components/responses/InternalError"
  /computer/move_mouse:
    post:
      summary: Move the mouse cursor to the specified coordinates on the host computer (compatibility alias)
      operationId: moveMouse
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MoveMouseRequest"
      responses:
        "200":
          description: Mouse cursor moved
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OkResponse"
        "400":
          $ref: "#/components/responses/BadRequestError"
        "500":
          $ref: "#/components/responses/InternalError"
          
  # Input API endpoints
  /input/mouse/move:
    post:
      summary: Move mouse cursor to absolute coordinates
      operationId: inputMouseMove
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MouseMoveRequest"
      responses:
        "200":
          description: Mouse moved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OkResponse"
        "400":
          $ref: "#/components/responses/BadRequestError"
        "500":
          $ref: "#/components/responses/InternalError"
          
  /input/mouse/move_relative:
    post:
      summary: Move mouse cursor relative to current position
      operationId: inputMouseMoveRelative
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MouseMoveRelativeRequest"
      responses:
        "200":
          description: Mouse moved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OkResponse"
        "400":
          $ref: "#/components/responses/BadRequestError"
        "500":
          $ref: "#/components/responses/InternalError"
          
  /input/mouse/click:
    post:
      summary: Click mouse button
      operationId: inputMouseClick
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MouseClickRequest"
      responses:
        "200":
          description: Mouse clicked successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OkResponse"
        "400":
          $ref: "#/components/responses/BadRequestError"
        "500":
          $ref: "#/components/responses/InternalError"
          
  /input/mouse/down:
    post:
      summary: Press mouse button down
      operationId: inputMouseDown
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MouseButtonRequest"
      responses:
        "200":
          description: Mouse button pressed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OkResponse"
        "400":
          $ref: "#/components/responses/BadRequestError"
        "500":
          $ref: "#/components/responses/InternalError"
          
  /input/mouse/up:
    post:
      summary: Release mouse button
      operationId: inputMouseUp
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MouseButtonRequest"
      responses:
        "200":
          description: Mouse button released
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OkResponse"
        "400":
          $ref: "#/components/responses/BadRequestError"
        "500":
          $ref: "#/components/responses/InternalError"
          
  /input/mouse/scroll:
    post:
      summary: Scroll mouse wheel
      operationId: inputMouseScroll
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MouseScrollRequest"
      responses:
        "200":
          description: Mouse scrolled
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OkResponse"
        "400":
          $ref: "#/components/responses/BadRequestError"
        "500":
          $ref: "#/components/responses/InternalError"
          
  /input/mouse/location:
    get:
      summary: Get current mouse cursor location
      operationId: inputMouseLocation
      responses:
        "200":
          description: Mouse location
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MouseLocationResponse"
        "400":
          $ref: "#/components/responses/BadRequestError"
        "500":
          $ref: "#/components/responses/InternalError"
          
  /input/keyboard/type:
    post:
      summary: Type text
      operationId: inputKeyboardType
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/KeyboardTypeRequest"
      responses:
        "200":
          description: Text typed successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OkResponse"
        "400":
          $ref: "#/components/responses/BadRequestError"
        "500":
          $ref: "#/components/responses/InternalError"
          
  /input/keyboard/key:
    post:
      summary: Send key presses
      operationId: inputKeyboardKey
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/KeyboardKeysRequest"
      responses:
        "200":
          description: Keys pressed successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OkResponse"
        "400":
          $ref: "#/components/responses/BadRequestError"
        "500":
          $ref: "#/components/responses/InternalError"
          
  /input/keyboard/key_down:
    post:
      summary: Press and hold a key
      operationId: inputKeyboardKeyDown
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/KeyRequest"
      responses:
        "200":
          description: Key pressed successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OkResponse"
        "400":
          $ref: "#/components/responses/BadRequestError"
        "500":
          $ref: "#/components/responses/InternalError"
          
  /input/keyboard/key_up:
    post:
      summary: Release a key
      operationId: inputKeyboardKeyUp
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/KeyRequest"
      responses:
        "200":
          description: Key released successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OkResponse"
        "400":
          $ref: "#/components/responses/BadRequestError"
        "500":
          $ref: "#/components/responses/InternalError"
          
  /input/window/activate:
    post:
      summary: Activate a window
      operationId: inputWindowActivate
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WindowMatchRequest"
      responses:
        "200":
          description: Window activation result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WindowActivateResponse"
        "400":
          $ref: "#/components/responses/BadRequestError"
        "500":
          $ref: "#/components/responses/InternalError"
          
  /input/window/focus:
    post:
      summary: Focus a window
      operationId: inputWindowFocus
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WindowMatchRequest"
      responses:
        "200":
          description: Window focus result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WindowFocusResponse"
        "400":
          $ref: "#/components/responses/BadRequestError"
        "500":
          $ref: "#/components/responses/InternalError"
          
  /input/window/move_resize:
    post:
      summary: Move and resize a window
      operationId: inputWindowMoveResize
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WindowMoveResizeRequest"
      responses:
        "200":
          description: Window moved/resized successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OkResponse"
        "400":
          $ref: "#/components/responses/BadRequestError"
        "404":
          $ref: "#/components/responses/NotFoundError"
        "500":
          $ref: "#/components/responses/InternalError"
          
  /input/window/raise:
    post:
      summary: Raise window to top
      operationId: inputWindowRaise
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WindowMatchRequest"
      responses:
        "200":
          description: Window raised successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OkResponse"
        "400":
          $ref: "#/components/responses/BadRequestError"
        "404":
          $ref: "#/components/responses/NotFoundError"
        "500":
          $ref: "#/components/responses/InternalError"
          
  /input/window/minimize:
    post:
      summary: Minimize window
      operationId: inputWindowMinimize
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WindowMatchRequest"
      responses:
        "200":
          description: Window minimized successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OkResponse"
        "400":
          $ref: "#/components/responses/BadRequestError"
        "404":
          $ref: "#/components/responses/NotFoundError"
        "500":
          $ref: "#/components/responses/InternalError"
          
  /input/window/map:
    post:
      summary: Map (show) window
      operationId: inputWindowMap
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WindowMatchRequest"
      responses:
        "200":
          description: Window mapped successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OkResponse"
        "400":
          $ref: "#/components/responses/BadRequestError"
        "404":
          $ref: "#/components/responses/NotFoundError"
        "500":
          $ref: "#/components/responses/InternalError"
          
  /input/window/unmap:
    post:
      summary: Unmap (hide) window
      operationId: inputWindowUnmap
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WindowMatchRequest"
      responses:
        "200":
          description: Window unmapped successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OkResponse"
        "400":
          $ref: "#/components/responses/BadRequestError"
        "404":
          $ref: "#/components/responses/NotFoundError"
        "500":
          $ref: "#/components/responses/InternalError"
          
  /input/window/close:
    post:
      summary: Close window
      operationId: inputWindowClose
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WindowMatchRequest"
      responses:
        "200":
          description: Window close result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WindowCloseResponse"
        "400":
          $ref: "#/components/responses/BadRequestError"
        "404":
          $ref: "#/components/responses/NotFoundError"
        "500":
          $ref: "#/components/responses/InternalError"
          
  /input/window/kill:
    post:
      summary: Kill window
      operationId: inputWindowKill
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WindowMatchRequest"
      responses:
        "200":
          description: Window killed successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OkResponse"
        "400":
          $ref: "#/components/responses/BadRequestError"
        "404":
          $ref: "#/components/responses/NotFoundError"
        "500":
          $ref: "#/components/responses/InternalError"
          
  /input/window/active:
    get:
      summary: Get active window
      operationId: inputWindowActive
      responses:
        "200":
          description: Active window information
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ActiveWindowResponse"
        "400":
          $ref: "#/components/responses/BadRequestError"
        "500":
          $ref: "#/components/responses/InternalError"
          
  /input/window/focused:
    get:
      summary: Get focused window
      operationId: inputWindowFocused
      responses:
        "200":
          description: Focused window information
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ActiveWindowResponse"
        "400":
          $ref: "#/components/responses/BadRequestError"
        "500":
          $ref: "#/components/responses/InternalError"
          
  /input/window/name:
    post:
      summary: Get window name
      operationId: inputWindowName
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WindowIdRequest"
      responses:
        "200":
          description: Window name
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WindowNameResponse"
        "400":
          $ref: "#/components/responses/BadRequestError"
        "500":
          $ref: "#/components/responses/InternalError"
          
  /input/window/pid:
    post:
      summary: Get window PID
      operationId: inputWindowPid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WindowIdRequest"
      responses:
        "200":
          description: Window PID
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WindowPidResponse"
        "400":
          $ref: "#/components/responses/BadRequestError"
        "500":
          $ref: "#/components/responses/InternalError"
          
  /input/window/geometry:
    post:
      summary: Get window geometry
      operationId: inputWindowGeometry
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WindowIdRequest"
      responses:
        "200":
          description: Window geometry information
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WindowGeometryResponse"
        "400":
          $ref: "#/components/responses/BadRequestError"
        "500":
          $ref: "#/components/responses/InternalError"
          
  /input/display/geometry:
    get:
      summary: Get display geometry
      operationId: inputDisplayGeometry
      responses:
        "200":
          description: Display geometry information
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DisplayGeometryResponse"
        "400":
          $ref: "#/components/responses/BadRequestError"
        "500":
          $ref: "#/components/responses/InternalError"
          
  /input/desktop/count:
    get:
      summary: Get number of desktops
      operationId: inputDesktopCountGet
      responses:
        "200":
          description: Desktop count
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DesktopCountResponse"
        "400":
          $ref: "#/components/responses/BadRequestError"
        "500":
          $ref: "#/components/responses/InternalError"
    post:
      summary: Set number of desktops
      operationId: inputDesktopCountSet
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DesktopCountRequest"
      responses:
        "200":
          description: Desktop count set successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OkResponse"
        "400":
          $ref: "#/components/responses/BadRequestError"
        "500":
          $ref: "#/components/responses/InternalError"
          
  /input/desktop/current:
    get:
      summary: Get current desktop
      operationId: inputDesktopCurrentGet
      responses:
        "200":
          description: Current desktop index
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DesktopIndexResponse"
        "400":
          $ref: "#/components/responses/BadRequestError"
        "500":
          $ref: "#/components/responses/InternalError"
    post:
      summary: Set current desktop
      operationId: inputDesktopCurrentSet
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DesktopIndexRequest"
      responses:
        "200":
          description: Current desktop set successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OkResponse"
        "400":
          $ref: "#/components/responses/BadRequestError"
        "500":
          $ref: "#/components/responses/InternalError"
          
  /input/desktop/window_desktop:
    post:
      summary: Move window to a different desktop
      operationId: inputDesktopWindowDesktop
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WindowDesktopRequest"
      responses:
        "200":
          description: Window moved to desktop successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OkResponse"
        "400":
          $ref: "#/components/responses/BadRequestError"
        "404":
          $ref: "#/components/responses/NotFoundError"
        "500":
          $ref: "#/components/responses/InternalError"
          
  /input/desktop/viewport:
    get:
      summary: Get desktop viewport
      operationId: inputDesktopViewportGet
      responses:
        "200":
          description: Desktop viewport information
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DesktopViewportResponse"
        "400":
          $ref: "#/components/responses/BadRequestError"
        "500":
          $ref: "#/components/responses/InternalError"
    post:
      summary: Set desktop viewport
      operationId: inputDesktopViewportSet
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DesktopViewportRequest"
      responses:
        "200":
          description: Desktop viewport set successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OkResponse"
        "400":
          $ref: "#/components/responses/BadRequestError"
        "500":
          $ref: "#/components/responses/InternalError"
          
  /input/combo/activate_and_type:
    post:
      summary: Activate window and type text
      operationId: inputComboActivateAndType
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ActivateAndTypeRequest"
      responses:
        "200":
          description: Window activated and text typed successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ComboWindowResponse"
        "400":
          $ref: "#/components/responses/BadRequestError"
        "404":
          $ref: "#/components/responses/NotFoundError"
        "500":
          $ref: "#/components/responses/InternalError"
          
  /input/combo/activate_and_keys:
    post:
      summary: Activate window and send key sequence
      operationId: inputComboActivateAndKeys
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ActivateAndKeysRequest"
      responses:
        "200":
          description: Window activated and keys sent successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ComboWindowResponse"
        "400":
          $ref: "#/components/responses/BadRequestError"
        "404":
          $ref: "#/components/responses/NotFoundError"
        "500":
          $ref: "#/components/responses/InternalError"
          
  /input/combo/window/center:
    post:
      summary: Center window on screen
      operationId: inputComboWindowCenter
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WindowCenterRequest"
      responses:
        "200":
          description: Window centered successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WindowCenterResponse"
        "400":
          $ref: "#/components/responses/BadRequestError"
        "404":
          $ref: "#/components/responses/NotFoundError"
        "500":
          $ref: "#/components/responses/InternalError"
          
  /input/combo/window/snap:
    post:
      summary: Snap window to position
      operationId: inputComboWindowSnap
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WindowSnapRequest"
      responses:
        "200":
          description: Window snapped successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WindowSnapResponse"
        "400":
          $ref: "#/components/responses/BadRequestError"
        "404":
          $ref: "#/components/responses/NotFoundError"
        "500":
          $ref: "#/components/responses/InternalError"
          
  /input/system/exec:
    post:
      summary: Execute a system command
      operationId: inputSystemExec
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SystemExecRequest"
      responses:
        "200":
          description: Command executed successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SystemExecResponse"
        "400":
          $ref: "#/components/responses/BadRequestError"
        "500":
          $ref: "#/components/responses/InternalError"
          
  /input/system/sleep:
    post:
      summary: Sleep for a specified duration
      operationId: inputSystemSleep
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SleepRequest"
      responses:
        "200":
          description: Sleep completed successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OkResponse"
        "400":
          $ref: "#/components/responses/BadRequestError"
        "500":
          $ref: "#/components/responses/InternalError"
          
  # File system operations
  /fs/read_file:
    get:
      summary: Read file contents
      operationId: readFile
      parameters:
        - name: path
          in: query
          required: true
          schema:
            type: string
            pattern: "^/.*"
          description: Absolute file path to read.
      responses:
        "200":
          description: File read successfully
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        "400":
          $ref: "#/components/responses/BadRequestError"
        "404":
          $ref: "#/components/responses/NotFoundError"
        "500":
          $ref: "#/components/responses/InternalError"

  /fs/write_file:
    put:
      summary: Write or create a file
      operationId: writeFile
      parameters:
        - name: path
          in: query
          required: true
          schema:
            type: string
            pattern: "^/.*"
          description: Destination absolute file path.
        - name: mode
          in: query
          required: false
          schema:
            type: string
            pattern: "^[0-7]{3,4}$"
          description: Optional file mode (octal string, e.g. 644). Defaults to 644.
      requestBody:
        required: true
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
      responses:
        "201":
          description: File written successfully
        "400":
          $ref: "#/components/responses/BadRequestError"
        "404":
          $ref: "#/components/responses/NotFoundError"
        "500":
          $ref: "#/components/responses/InternalError"

  /fs/list_files:
    get:
      summary: List files in a directory
      operationId: listFiles
      parameters:
        - name: path
          in: query
          required: true
          schema:
            type: string
            pattern: "^/.*"
          description: Absolute directory path.
      responses:
        "200":
          description: Directory listing
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListFiles"
        "400":
          $ref: "#/components/responses/BadRequestError"
        "404":
          $ref: "#/components/responses/NotFoundError"
        "500":
          $ref: "#/components/responses/InternalError"

  /fs/create_directory:
    put:
      summary: Create a new directory
      operationId: createDirectory
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateDirectoryRequest"
      responses:
        "201":
          description: Directory created successfully
        "400":
          $ref: "#/components/responses/BadRequestError"
        "500":
          $ref: "#/components/responses/InternalError"

  /fs/delete_file:
    put:
      summary: Delete a file
      operationId: deleteFile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeletePathRequest"
      responses:
        "200":
          description: File deleted
        "400":
          $ref: "#/components/responses/BadRequestError"
        "404":
          $ref: "#/components/responses/NotFoundError"
        "500":
          $ref: "#/components/responses/InternalError"

  /fs/delete_directory:
    put:
      summary: Delete a directory
      operationId: deleteDirectory
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeletePathRequest"
      responses:
        "200":
          description: Directory deleted
        "400":
          $ref: "#/components/responses/BadRequestError"
        "404":
          $ref: "#/components/responses/NotFoundError"
        "500":
          $ref: "#/components/responses/InternalError"

  /fs/set_file_permissions:
    put:
      summary: Set file or directory permissions/ownership
      operationId: setFilePermissions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SetFilePermissionsRequest"
      responses:
        "200":
          description: Permissions updated
        "400":
          $ref: "#/components/responses/BadRequestError"
        "404":
          $ref: "#/components/responses/NotFoundError"
        "500":
          $ref: "#/components/responses/InternalError"

  /fs/file_info:
    get:
      summary: Get information about a file or directory
      operationId: fileInfo
      parameters:
        - name: path
          in: query
          required: true
          schema:
            type: string
            pattern: "^/.*"
          description: Absolute path of the file or directory.
      responses:
        "200":
          description: File information
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FileInfo"
        "400":
          $ref: "#/components/responses/BadRequestError"
        "404":
          $ref: "#/components/responses/NotFoundError"
        "500":
          $ref: "#/components/responses/InternalError"

  /fs/move:
    put:
      summary: Move or rename a file or directory
      operationId: movePath
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MovePathRequest"
      responses:
        "200":
          description: Move successful
        "400":
          $ref: "#/components/responses/BadRequestError"
        "404":
          $ref: "#/components/responses/NotFoundError"
        "500":
          $ref: "#/components/responses/InternalError"

  /fs/watch:
    post:
      summary: Watch a directory for changes
      operationId: startFsWatch
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StartFsWatchRequest"
      responses:
        "201":
          description: Watch started successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  watch_id:
                    type: string
                    description: Unique identifier for the directory watch
        "400":
          $ref: "#/components/responses/BadRequestError"
        "404":
          $ref: "#/components/responses/NotFoundError"
        "500":
          $ref: "#/components/responses/InternalError"

  /fs/watch/{watch_id}/events:
    get:
      summary: Stream filesystem events for a watch
      operationId: streamFsEvents
      parameters:
        - name: watch_id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: SSE stream of filesystem events
          headers:
            X-SSE-Content-Type:
              description: Media type of SSE data events (application/json)
              schema:
                type: string
                const: application/json
          content:
            text/event-stream:
              schema:
                $ref: "#/components/schemas/FileSystemEvent"
        "400":
          $ref: "#/components/responses/BadRequestError"
        "404":
          $ref: "#/components/responses/NotFoundError"
        "500":
          $ref: "#/components/responses/InternalError"

  /fs/watch/{watch_id}:
    delete:
      summary: Stop watching a directory
      operationId: stopFsWatch
      parameters:
        - name: watch_id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Watch stopped successfully
        "400":
          $ref: "#/components/responses/BadRequestError"
        "404":
          $ref: "#/components/responses/NotFoundError"
        "500":
          $ref: "#/components/responses/InternalError"
          
components:
  schemas:
    HealthResponse:
      type: object
      required: [status, uptime_sec]
      properties:
        status:
          type: string
          description: Health status
          enum: [ok]
        uptime_sec:
          type: integer
          description: Uptime in seconds
          minimum: 0

    OkResponse:
      type: object
      required: [ok]
      properties:
        ok:
          type: boolean
          description: Success indicator
          enum: [true]

    StartRecordingRequest:
      type: object
      properties:
        maxFileSizeInMB:
          type: integer
          description: Maximum file size in MB (overrides server default)
          minimum: 10
          maximum: 10000
        framerate:
          type: integer
          description: Recording framerate in fps (overrides server default)
          minimum: 1
          maximum: 20
        maxDurationInSeconds:
          type: integer
          description: Maximum recording duration in seconds (overrides server default)
          minimum: 1
        id:
          type: string
          description: Optional identifier for the recording session. Alphanumeric or hyphen.
          pattern: "^[a-zA-Z0-9-]+$"
      additionalProperties: false
    StopRecordingRequest:
      type: object
      properties:
        forceStop:
          type: boolean
          description: Immediately stop without graceful shutdown. This may result in a corrupted video file.
          default: false
        id:
          type: string
          description: Identifier of the recorder to stop. Alphanumeric or hyphen.
          pattern: "^[a-zA-Z0-9-]+$"
      additionalProperties: false
    Error:
      type: object
      required: [message]
      properties:
        message:
          type: string
    RecorderInfo:
      type: object
      required: [id, isRecording]
      properties:
        id:
          type: string
        isRecording:
          type: boolean
        started_at:
          type: string
          format: date-time
          nullable: true
          description: Timestamp when recording started
        finished_at:
          type: string
          format: date-time
          nullable: true
          description: Timestamp when recording finished
    ClickMouseRequest:
      type: object
      required:
        - x
        - y
      properties:
        button:
          type: string
          description: Mouse button to interact with
          enum: [left, right, middle, back, forward]
        click_type:
          type: string
          description: Type of click action
          enum: [down, up, click]
        x:
          type: integer
          description: X coordinate of the click position
        y:
          type: integer
          description: Y coordinate of the click position
        hold_keys:
          type: array
          description: Modifier keys to hold during the click
          items:
            type: string
        num_clicks:
          type: integer
          description: Number of times to repeat the click
          default: 1
      additionalProperties: false
    MoveMouseRequest:
      type: object
      required:
        - x
        - y
      properties:
        x:
          type: integer
          description: X coordinate to move the cursor to
        y:
          type: integer
          description: Y coordinate to move the cursor to
        hold_keys:
          type: array
          description: Modifier keys to hold during the move
          items:
            type: string
      additionalProperties: false
      
    # New input API schema definitions
    MouseMoveRelativeRequest:
      type: object
      properties:
        dx:
          type: integer
          description: Relative X movement distance
          default: 0
        dy:
          type: integer
          description: Relative Y movement distance
          default: 0
      additionalProperties: false
      
    MouseClickRequest:
      type: object
      required:
        - button
      properties:
        button:
          oneOf:
            - type: string
              enum: [left, middle, right, back, forward]
            - type: integer
              description: Numeric button identifier
        count:
          type: integer
          description: Number of clicks
          default: 1
      additionalProperties: false
      
    MouseButtonRequest:
      type: object
      required:
        - button
      properties:
        button:
          oneOf:
            - type: string
              enum: [left, middle, right, back, forward]
            - type: integer
              description: Numeric button identifier
      additionalProperties: false
      
    MouseScrollRequest:
      type: object
      properties:
        dx:
          type: integer
          description: Horizontal scroll amount
          default: 0
        dy:
          type: integer
          description: Vertical scroll amount
          default: -120
      additionalProperties: false
      
    MouseLocationResponse:
      type: object
      required: [x, y]
      properties:
        x:
          type: integer
          description: X coordinate
        y:
          type: integer
          description: Y coordinate
        screen:
          type: integer
          description: Screen number
        window:
          type: string
          description: Window ID under cursor
      
    KeyboardTypeRequest:
      type: object
      required:
        - text
      properties:
        text:
          type: string
          description: Text to type
        wpm:
          type: integer
          description: Words per minute typing speed
          default: 300
        enter:
          type: boolean
          description: Whether to press Enter after typing
          default: false
      additionalProperties: false
      
    KeyboardKeysRequest:
      type: object
      required:
        - keys
      properties:
        keys:
          type: array
          description: Key sequence to send
          items:
            type: string
      additionalProperties: false
      
    KeyRequest:
      type: object
      required:
        - key
      properties:
        key:
          type: string
          description: Key to press/release
      additionalProperties: false
      
    WindowMatch:
      type: object
      properties:
        title_contains:
          type: string
          description: Window title substring to match
          nullable: true
        name:
          type: string
          description: Alias for title_contains
          nullable: true
        class:
          type: string
          description: Window class to match
          nullable: true
        pid:
          type: integer
          description: Process ID to match
          nullable: true
        only_visible:
          type: boolean
          description: Only match visible windows
          default: false
      additionalProperties: false
      
    WindowMatchRequest:
      type: object
      required:
        - match
      properties:
        match:
          $ref: "#/components/schemas/WindowMatch"
      additionalProperties: false
      
    WindowIdRequest:
      type: object
      required:
        - wid
      properties:
        wid:
          type: string
          description: Window ID
      additionalProperties: false
      
    WindowActivateResponse:
      type: object
      required: [activated]
      properties:
        activated:
          type: boolean
          description: Whether window was activated
        wid:
          type: string
          description: Window ID if found
      
    WindowFocusResponse:
      type: object
      required: [focused]
      properties:
        focused:
          type: boolean
          description: Whether window was focused
        wid:
          type: string
          description: Window ID if found
      
    WindowCloseResponse:
      type: object
      required: [ok]
      properties:
        ok:
          type: boolean
          description: Success indicator
        wid:
          type: string
          description: Window ID if found
        windowIds:
          type: array
          description: Multiple window IDs when multiple windows are closed
          items:
            type: string
      
    WindowMoveResizeRequest:
      type: object
      required:
        - match
      properties:
        match:
          $ref: "#/components/schemas/WindowMatch"
        x:
          type: integer
          description: New X position
        y:
          type: integer
          description: New Y position
        width:
          type: integer
          description: New width
        height:
          type: integer
          description: New height
      additionalProperties: false
      
    ActiveWindowResponse:
      type: object
      properties:
        wid:
          type: string
          description: Window ID
      
    WindowNameResponse:
      type: object
      required: [wid, name]
      properties:
        wid:
          type: string
          description: Window ID
        name:
          type: string
          description: Window name/title
      
    WindowPidResponse:
      type: object
      required: [wid, pid]
      properties:
        wid:
          type: string
          description: Window ID
        pid:
          type: integer
          description: Process ID
      
    WindowGeometryResponse:
      type: object
      required: [wid, x, y, width, height]
      properties:
        wid:
          type: string
          description: Window ID
        x:
          type: integer
          description: X position
        y:
          type: integer
          description: Y position
        width:
          type: integer
          description: Width
        height:
          type: integer
          description: Height
        screen:
          type: integer
          description: Screen number
      
    DisplayGeometryResponse:
      type: object
      required: [width, height]
      properties:
        width:
          type: integer
          description: Display width
        height:
          type: integer
          description: Display height
      
    DesktopCountRequest:
      type: object
      required:
        - count
      properties:
        count:
          type: integer
          description: Number of desktops to set
          minimum: 1
      additionalProperties: false
      
    DesktopCountResponse:
      type: object
      required: [count]
      properties:
        count:
          type: integer
          description: Number of desktops
      
    DesktopIndexRequest:
      type: object
      required:
        - index
      properties:
        index:
          type: integer
          description: Desktop index to switch to
          minimum: 0
      additionalProperties: false
      
    DesktopIndexResponse:
      type: object
      required: [index]
      properties:
        index:
          type: integer
          description: Current desktop index
      
    WindowDesktopRequest:
      type: object
      required:
        - match
        - index
      properties:
        match:
          $ref: "#/components/schemas/WindowMatch"
        index:
          type: integer
          description: Desktop index to move window to
          minimum: 0
      additionalProperties: false
      
    DesktopViewportRequest:
      type: object
      required:
        - x
        - y
      properties:
        x:
          type: integer
          description: X coordinate of viewport
        y:
          type: integer
          description: Y coordinate of viewport
      additionalProperties: false
      
    DesktopViewportResponse:
      type: object
      required: [x, y]
      properties:
        x:
          type: integer
          description: X coordinate of viewport
        y:
          type: integer
          description: Y coordinate of viewport
      
    ActivateAndTypeRequest:
      type: object
      required:
        - match
      properties:
        match:
          $ref: "#/components/schemas/WindowMatch"
        text:
          type: string
          description: Text to type
          default: ""
        enter:
          type: boolean
          description: Whether to press Enter after typing
          default: false
        wpm:
          type: integer
          description: Words per minute typing speed
          default: 300
      additionalProperties: false
      
    ActivateAndKeysRequest:
      type: object
      required:
        - match
        - keys
      properties:
        match:
          $ref: "#/components/schemas/WindowMatch"
        keys:
          type: array
          description: Key sequence to send
          items:
            type: string
      additionalProperties: false
      
    ComboWindowResponse:
      type: object
      required: [ok, wid]
      properties:
        ok:
          type: boolean
          description: Success indicator
        wid:
          type: string
          description: Window ID
      
    WindowCenterRequest:
      type: object
      required:
        - match
      properties:
        match:
          $ref: "#/components/schemas/WindowMatch"
        width:
          type: integer
          description: Optional width to set
          nullable: true
        height:
          type: integer
          description: Optional height to set
          nullable: true
      additionalProperties: false
      
    WindowCenterResponse:
      type: object
      required: [ok, wid, x, y, width, height]
      properties:
        ok:
          type: boolean
          description: Success indicator
        wid:
          type: string
          description: Window ID
        x:
          type: integer
          description: New X position
        y:
          type: integer
          description: New Y position
        width:
          type: integer
          description: Width
        height:
          type: integer
          description: Height
      
    WindowSnapRequest:
      type: object
      required:
        - match
        - position
      properties:
        match:
          $ref: "#/components/schemas/WindowMatch"
        position:
          type: string
          description: Position to snap window to
          enum: [left, right, top, bottom, topleft, topright, bottomleft, bottomright, maximize]
      additionalProperties: false
      
    WindowSnapResponse:
      type: object
      required: [ok, wid, x, y, width, height]
      properties:
        ok:
          type: boolean
          description: Success indicator
        wid:
          type: string
          description: Window ID
        x:
          type: integer
          description: New X position
        y:
          type: integer
          description: New Y position
        width:
          type: integer
          description: Width
        height:
          type: integer
          description: Height
      
    SystemExecRequest:
      type: object
      required:
        - command
      properties:
        command:
          type: string
          description: Command to execute
        args:
          type: array
          description: Command arguments
          items:
            type: string
          default: []
      additionalProperties: false
      
    SystemExecResponse:
      type: object
      required: [code, stdout, stderr]
      properties:
        code:
          type: integer
          description: Exit code
        stdout:
          type: string
          description: Standard output
        stderr:
          type: string
          description: Standard error
      
    SleepRequest:
      type: object
      required:
        - seconds
      properties:
        seconds:
          type: number
          description: Seconds to sleep
          minimum: 0
      additionalProperties: false
      
    # Existing schema definitions
    StartFsWatchRequest:
      type: object
      required:
        - path
      properties:
        path:
          type: string
          description: Directory to watch.
        recursive:
          type: boolean
          description: Whether to watch recursively.
          default: false
      additionalProperties: false
    FileSystemEvent:
      type: object
      description: Filesystem change event.
      required: [type, path]
      properties:
        type:
          type: string
          enum: [CREATE, WRITE, DELETE, RENAME]
          description: Event type.
        name:
          type: string
          description: Base name of the file or directory affected.
        path:
          type: string
          description: Absolute path of the file or directory.
        is_dir:
          type: boolean
          description: Whether the affected path is a directory.
    DeleteRecordingRequest:
      type: object
      properties:
        id:
          type: string
          description: Identifier of the recording to delete. Alphanumeric or hyphen.
          pattern: "^[a-zA-Z0-9-]+$"
      additionalProperties: false
    FileInfo:
      type: object
      required: [name, path, size_bytes, is_dir, mod_time, mode]
      properties:
        name:
          type: string
          description: Base name of the file or directory.
        path:
          type: string
          description: Absolute path.
        size_bytes:
          type: integer
          description: Size in bytes. 0 for directories.
        is_dir:
          type: boolean
          description: Whether the path is a directory.
        mod_time:
          type: string
          format: date-time
          description: Last modification time.
        mode:
          type: string
          description: File mode bits (e.g., "drwxr-xr-x" or "-rw-r--r--").

    ListFiles:
      type: array
      description: Array of file or directory information entries.
      items:
        $ref: "#/components/schemas/FileInfo"

    CreateDirectoryRequest:
      type: object
      required: [path]
      properties:
        path:
          type: string
          description: Absolute directory path to create.
          pattern: "^/.*"
        mode:
          type: string
          description: Optional directory mode (octal string, e.g. 755). Defaults to 755.
          pattern: "^[0-7]{3,4}$"
      additionalProperties: false

    DeletePathRequest:
      type: object
      required: [path]
      properties:
        path:
          type: string
          description: Absolute path to delete.
          pattern: "^/.*"
      additionalProperties: false

    SetFilePermissionsRequest:
      type: object
      required: [path, mode]
      properties:
        path:
          type: string
          description: Absolute path whose permissions are to be changed.
          pattern: "^/.*"
        owner:
          type: string
          description: New owner username or UID.
        group:
          type: string
          description: New group name or GID.
        mode:
          type: string
          description: File mode bits (octal string, e.g. 644).
          pattern: "^[0-7]{3,4}$"
      additionalProperties: false

    MovePathRequest:
      type: object
      required: [src_path, dest_path]
      properties:
        src_path:
          type: string
          description: Absolute source path.
          pattern: "^/.*"
        dest_path:
          type: string
          description: Absolute destination path.
          pattern: "^/.*"
      additionalProperties: false
  responses:
    BadRequestError:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    ConflictError:
      description: Conflict
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    NotFoundError:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    InternalError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"